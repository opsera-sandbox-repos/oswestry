# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of nodes
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Adding a comment for executing pipeline - Gilbert
name: node-os-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Build artifacts
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
        echo "foo" > artifact1 
        npm ci 
        npm run build --if-present > artifact2 
        npm test
        docker build . > artifact3

    - name: Generate hashes
      shell: bash
      id: hash
      run: |
        echo "hashes=$(sha256sum artifact1 artifact2 artifact3 | base64 -w0)" >> "$GITHUB_OUTPUT"

    - name: Upload artifact1
      uses: actions/upload-artifact@v3 
      with:
        name: artifact1
        path: artifact1
        if-no-files-found: error
        # retention-days: 5

    - name: Upload artifact2
      uses: actions/upload-artifact@v3 
      with:
        name: artifact2
        path: artifact2
        if-no-files-found: error
          # retention-days: 5
    
    - name: Upload artifact3
      uses: actions/upload-artifact@v3 
      with:
        name: artifact3
        path: artifact3
        if-no-files-found: error
          # retention-days: 5

  scrapper: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }} 
    - name: trufflehog-actions-scan
      uses: edplato/trufflehog-actions-scan@master


  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.2.1
    with:
      compile-generator: true
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true
