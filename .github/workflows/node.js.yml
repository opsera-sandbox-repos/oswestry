# This workflow will do a clean install of node dependencies, cache/restore them build the source code, and run test across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: node-os

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      MESSAGE:
        description: "Enter Message"
        required: false
    

jobs:
  build:
    name: Build Nodejs Application
    env:    
      JOBENV: build-e1
      
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.17.0]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
  
#   sonarScan:
#     name: SonarQube Scan
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
#     - name: SonarQube Scan
#       uses: kitabisa/sonarqube-action@v1.1.0
#       with:
#         host: ${{ secrets.SONARQUBE_HOST }}
#         login: ${{ secrets.SONARQUBE_TOKEN }}
#         on: push

#   sonarResults:
#     name: Fetching Sonar Results
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - run : sudo chmod 777 ./scripts/sonar-results.sh 
#     - run: ./scripts/sonar-results.sh ${{ github.run_id }} 
  
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [14.17.0]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm test

    
#   actionsMetadata:
#     name: Fetching Actions Metadata
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
# #     - run : sudo chmod 777 ./scripts/metadata.sh 
# #     - run: ./scripts/metadata.sh
#     - name: replacing  
#       run: |
#         cat ${{ github.workspace }}/data/output.json | jq '(.workflow_metadata.run_id) |= ${{ github.run_id }}'
#     - run: cat ${{ github.workspace }}/data/output.json

